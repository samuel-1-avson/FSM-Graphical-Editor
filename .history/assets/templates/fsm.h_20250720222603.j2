{# fsm_designer_project/templates/fsm.h.j2 - Jinja2 Template for C Header (Switch-Case) #}
#ifndef {{ h_guard }}
#define {{ h_guard }}

{% if 'int' in state_enum_type %}
#include <stdint.h>
#include <stdbool.h>
{% endif %}

// --- FSM STATE ENUM ---
typedef enum {
{%- for state in states %}
    STATE_{{ state.c_name|upper }},
{%- endfor %}
    FSM_NUM_STATES // Helper for array sizing or loop limits
} FSM_State_t;

// --- FSM EVENT ENUM ---
{% if events -%}
typedef enum {
{%- for event in events %}
    EVENT_{{ event.c_name|upper }},
{%- endfor %}
    FSM_NUM_EVENTS // Helper for array sizing or loop limits
} FSM_Event_t;
{%- endif %}

// Use selected integer size for state/event IDs
typedef {{ state_enum_type }} FSM_StateId_t;
typedef {{ event_enum_type }} FSM_EventId_t;

#define FSM_NO_EVENT -1 // Special value for triggering 'during' actions or internal steps


// --- FSM CORE API ---
void {{ fsm_name_c }}_init(void);
void {{ fsm_name_c }}_run(FSM_EventId_t event_id); // Pass FSM_Event_t or FSM_NO_EVENT
FSM_StateId_t {{ fsm_name_c }}_get_current_state(void);


// --- USER-DEFINED ACTION PROTOTYPES ---
// Implement these functions in your application code.
{% for proto in action_prototypes %}
{{ proto }};
{%- endfor %}


#endif // {{ h_guard }}